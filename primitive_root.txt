<!DOCTYPE html>
<html>
<body>
<?php
$exception="";
$p=2;
$n=$p-1;
$prime_diviser=array();
$primitive_root=array();
$prime=array(2,3,5,7,11,
			 13,17,19,23,29,
             31,37,41,43,47);
$c=0;
$flag=primecheck($p);
		if($p==2){
        echo $p." is a prime number.";
		echo "<br \>";
		echo "There are no primitive roots modular 2.";
        $exception++;
		}else if($p==41){
        echo $p." is a prime number.";
		echo "<br \>";
		echo "Let r be a primitive root mod ".$p.", 		hence r is equal to 6.";
        $exception++;
		}else if($p==43){
        echo $p." is a prime number.";
		echo "<br \>";
		echo "Let r be a primitive root mod ".$p.", 		hence r is equal to 3.";
        $exception++;
    	}
if(($flag!=0)&&($exception==0)){
echo $p." is a prime number.";
echo "<br \>";
for($i=0; $i<=14; $i++){  
     $q=$n/$prime[$i];
     $s=is_decimal($q);  
     if($s==0){
        $prime_diviser[$c]=$prime[$i];      
  	$c++;
	}      
}
$d=min($prime_diviser);
$t=$n/$d;
$count=0;
for($i=0; $i<=14; $i++){   
     $ti=pow($prime[$i],$t);
     $tic=$ti/$p;
     $tac=floor($tic);
     $toe=$p*($tic-$tac);
     $toe=round($toe);   
     if($toe!=1){
        $primitive_root[$count]=$prime[$i];  
  		$count++;
        }      
}
$r=min($primitive_root);
echo "Let r be a primitive root mod ".$p.", hence r is equal to ".$r.".";
}else if(($flag==0)&&($exception==0)){
	echo $p." is not a prime number.";
}
function is_decimal( $val )
{
    return is_numeric( $val ) && floor( $val ) != $val;
}
function primeCheck($number){
    if ($number == 1)
    return 0;
    for ($i = 2; $i <= $number/2; $i++){
        if ($number % $i == 0)
            return 0;
    }
    return 1;
}
?>
</body>
</html>